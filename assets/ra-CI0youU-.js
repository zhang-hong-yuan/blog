import{_ as n}from"./index-C58PDwY0.js";import{ao as d,o,c as e,a4 as c,q as r,F as l,at as t}from"./@vue-DejhS5Sx.js";import"./element-plus-BrY0m-Us.js";import"./@vueuse-DG8PRMz9.js";import"./@element-plus-BIOyB9cn.js";import"./lodash-es-CapuB_Of.js";import"./@popperjs-Be9rlJlp.js";import"./hammerjs-uHrd7ah6.js";import"./@babel-Cpj98o6Y.js";import"./pinia-B7SS5Sce.js";import"./naive-ui-DvnQ8VCf.js";import"./seemly-BiqVPN66.js";import"./date-fns-x7VUUoCw.js";import"./evtd-CI_DDEu_.js";import"./vooks-BvrI42AR.js";import"./vueuc-DNxWDit6.js";import"./@css-render-Wpowbghw.js";import"./css-render-Ct37b3-v.js";import"./@emotion-WldOFDRm.js";import"./vdirs-DL8EOfHr.js";import"./@juggle-C8OzoCMD.js";import"./@arco-design-CcQ42w85.js";import"./number-precision-BW_FzNZC.js";import"./lodash-DBaaQlBN.js";import"./vue-router-CTzOd6h0.js";import"./jquery-awXEzGOF.js";import"./prismjs-Cy_Hpibq.js";import"./primevue-C3o8vU3d.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";/* empty css                  *//* empty css                    */const p={},m=t("<h1>Window</h1><p>所有浏览器都支持 window 对象。它表示浏览器窗口。所有 JavaScript 全局对象、函数以及变量均自动成为 window 对象的成员。</p><ul><li>全局变量是 window 对象的属性。</li><li>全局函数是 window 对象的方法。</li></ul><p>甚至 HTML DOM 的 document 也是 window 对象的属性之一：<code>window.document.getElementById(&quot;header&quot;);</code>等价于 <code>document.getElementById(&quot;header&quot;);</code></p><p>有三种方法能够确定浏览器窗口的尺寸。</p><p>对于Internet Explorer、Chrome、Firefox、Opera 以及 Safari：</p><ul><li><code>window.innerHeight</code> 浏览器窗口的内部高度(包括滚动条)</li><li><code>window.innerWidth</code> 浏览器窗口的内部宽度(包括滚动条)</li></ul><p>对于 Internet Explorer 8、7、6、5：</p><ul><li><code>document.documentElement.clientHeight</code></li><li><code>document.documentElement.clientWidth</code></li></ul><p>或者</p><ul><li><code>document.body.clientHeight</code></li><li><code>document.body.clientWidth</code></li></ul><p>实用的 JavaScript 方案(涵盖所有浏览器，包含 IE8 及以下版本的浏览器)：该例显示浏览器窗口的高度和宽度。</p>",12),u=t("<h3>window 对象的常见事件</h3><p>窗口加载事件，当文档内容完全加载完成会触发该事件(包括图像、脚本文件、CSS 文件等)，就调用的处理函数。窗口加载事件可以把 JS 代码写到页面元素的上方。(①a标签的超链接；②刷新页面；③前进后退按钮。三种情况都会刷新页面触发 load 事件)</p><ul><li><code>window.onload = function(){}</code></li><li><code>window.addEventListener(&quot;load&quot;,function(){})</code></li><li><code>document.addEventListener(&#39;DOMContentLoaded&#39;,function(){})</code></li></ul><p>DOMContentLoaded 仅当DOM加载完成时触发，不包括样式表，图片，flash等等。</p><p>调整窗口大小事件</p><ul><li><code>window.onresize = function(){}</code></li><li><code>window.addEventListener(&quot;resize&quot;,function(){})</code></li></ul>",6);function a(w,s){const i=d("code");return o(),e(l,null,[m,c((o(),e("pre",null,[r(`var w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
var h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
`)])),[[i,void 0,"js"]]),u],64)}const P=n(p,[["render",a]]);export{P as default};
