import{_ as t}from"./index-C58PDwY0.js";import{at as i}from"./@vue-DejhS5Sx.js";import"./element-plus-BrY0m-Us.js";import"./@vueuse-DG8PRMz9.js";import"./@element-plus-BIOyB9cn.js";import"./lodash-es-CapuB_Of.js";import"./@popperjs-Be9rlJlp.js";import"./hammerjs-uHrd7ah6.js";import"./@babel-Cpj98o6Y.js";import"./pinia-B7SS5Sce.js";import"./naive-ui-DvnQ8VCf.js";import"./seemly-BiqVPN66.js";import"./date-fns-x7VUUoCw.js";import"./evtd-CI_DDEu_.js";import"./vooks-BvrI42AR.js";import"./vueuc-DNxWDit6.js";import"./@css-render-Wpowbghw.js";import"./css-render-Ct37b3-v.js";import"./@emotion-WldOFDRm.js";import"./vdirs-DL8EOfHr.js";import"./@juggle-C8OzoCMD.js";import"./@arco-design-CcQ42w85.js";import"./number-precision-BW_FzNZC.js";import"./lodash-DBaaQlBN.js";import"./vue-router-CTzOd6h0.js";import"./jquery-awXEzGOF.js";import"./prismjs-Cy_Hpibq.js";import"./primevue-C3o8vU3d.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";/* empty css                  *//* empty css                    */const o={},r=i("<h2>作用域</h2><p>JavaScript 作用域就是标识符起作用的范围，目的是为了提高程序的可靠性，减少命名冲突。</p><p>作用域(scope)分为：全局作用域(global)和局部作用域(local)。</p><ul><li><strong>全局作用域：</strong>全局作用域是指变量可以在当前脚本的任意位置访问。包括： <ol><li>最外层的函数和在最外层函数外面定义的变量</li><li>所有未定义直接赋值的变量(为了避免这一缺陷，应使用strict模式：【&#39;use strict&#39;;】)</li><li>所有 window 对象的属性</li></ol></li><li><strong>局部作用域：</strong>在函数内部或语句块中声明的变量。函数的形参也是局部变量。</li></ul><br><p><strong>变量的生命周期</strong>：<u>全局变量</u>活得和应用程序(窗口、网页)一样久；<u>局部变量</u>在函数调用时创建，在函数完成后被删除。从执行效率看</p><ul><li>全局变量只有浏览器关闭的时候才会销毁，比较占内存资源</li><li>局部变量当程序执行完毕就会销毁，比较节约内存资源</li></ul>",7);function p(m,l){return r}const H=t(o,[["render",p]]);export{H as default};
