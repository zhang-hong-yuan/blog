import{_ as e}from"./index-C58PDwY0.js";import{ao as d,o as t,c as r,a4 as m,q as a,F as l,at as o}from"./@vue-DejhS5Sx.js";import"./element-plus-BrY0m-Us.js";import"./@vueuse-DG8PRMz9.js";import"./@element-plus-BIOyB9cn.js";import"./lodash-es-CapuB_Of.js";import"./@popperjs-Be9rlJlp.js";import"./hammerjs-uHrd7ah6.js";import"./@babel-Cpj98o6Y.js";import"./pinia-B7SS5Sce.js";import"./naive-ui-DvnQ8VCf.js";import"./seemly-BiqVPN66.js";import"./date-fns-x7VUUoCw.js";import"./evtd-CI_DDEu_.js";import"./vooks-BvrI42AR.js";import"./vueuc-DNxWDit6.js";import"./@css-render-Wpowbghw.js";import"./css-render-Ct37b3-v.js";import"./@emotion-WldOFDRm.js";import"./vdirs-DL8EOfHr.js";import"./@juggle-C8OzoCMD.js";import"./@arco-design-CcQ42w85.js";import"./number-precision-BW_FzNZC.js";import"./lodash-DBaaQlBN.js";import"./vue-router-CTzOd6h0.js";import"./jquery-awXEzGOF.js";import"./prismjs-Cy_Hpibq.js";import"./primevue-C3o8vU3d.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";/* empty css                  *//* empty css                    */const p={},s=o("<h1>&lt;iframe&gt;</h1><p>一个内联框架被用来在当前 HTML 文档中嵌入另一个文档。</p><p>可以把需要的文本放置在 【&lt;iframe&gt;】 和 【&lt;/iframe&gt;】 之间，这样就可以应对不支持 【&lt;iframe&gt;】 的浏览器。</p><table><tr><th>属性</th><th>值</th><th>描述</th></tr><tr><td>name</td><td><em>name</em></td><td>规定 【&lt;iframe&gt;】 的名称。</td></tr><tr><td>src</td><td><em>URL</em></td><td>规定在 【&lt;iframe&gt;】 中显示的文档的 URL。</td></tr><tr><td>sandbox</td><td> &quot;&quot;<br>allow-forms<br>allow-same-origin<br>allow-scripts<br>allow-top-navigation</td><td>对 【&lt;iframe&gt;】 的内容定义一系列额外的限制。</td></tr><tr><td>seamless</td><td>seamless</td><td>规定 【&lt;iframe&gt;】 看起来像是父文档中的一部分。</td></tr><tr><td>srcdoc</td><td><em>HTML_code</em></td><td>规定页面中的 HTML 内容显示在 【&lt;iframe&gt;】 中。</td></tr></table><p><strong>sandbox 属性</strong>的值既可以是一个空字符串(将会启用所有的限制)，也可以是用空格分隔的一系列指定的字符串。如果指定了空字符串(sandbox=&quot;&quot;)，该属性对呈现在iframe框架中的内容启用一些额外的限制条件。 </p><p>sandbox可以防止如下操作：</p><ul><li>访问父页面的DOM(从技术角度来说，这是因为相对于父页面iframe已经成为不同的源了)</li><li>执行脚本</li><li>通过脚本嵌入自己的表单或是操纵表单</li><li>对cookie、本地存储或本地SQL数据库的读写</li></ul>",7),n=o("<table><tr><th>属性值</th><th>描述</th></tr><tr><td>&quot;&quot;</td><td>启用所有限制条件</td></tr><tr><td>allow-same-origin</td><td>允许将内容作为普通来源对待。如果未使用该关键字，嵌入的内容将被视为一个独立的源。</td></tr><tr><td>allow-top-navigation</td><td>嵌入的页面的上下文可以导航(加载)内容到顶级的浏览上下文环境(browsing context)。如果未使用该关键字，这个操作将不可用。</td></tr><tr><td>allow-forms</td><td>允许表单提交。</td></tr><tr><td>allow-scripts</td><td>允许脚本执行。</td></tr></table>",1);function c(f,g){const i=d("code");return t(),r(l,null,[s,m((t(),r("pre",null,[a('<iframe sandbox="value">')])),[[i,void 0,"html"]]),n],64)}const J=e(p,[["render",c]]);export{J as default};
