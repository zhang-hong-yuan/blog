import{_ as n}from"./index-C58PDwY0.js";import{ao as p,o as e,c as o,a4 as s,q as i,F as c,e as t}from"./@vue-DejhS5Sx.js";import"./element-plus-BrY0m-Us.js";import"./@vueuse-DG8PRMz9.js";import"./@element-plus-BIOyB9cn.js";import"./lodash-es-CapuB_Of.js";import"./@popperjs-Be9rlJlp.js";import"./hammerjs-uHrd7ah6.js";import"./@babel-Cpj98o6Y.js";import"./pinia-B7SS5Sce.js";import"./naive-ui-DvnQ8VCf.js";import"./seemly-BiqVPN66.js";import"./date-fns-x7VUUoCw.js";import"./evtd-CI_DDEu_.js";import"./vooks-BvrI42AR.js";import"./vueuc-DNxWDit6.js";import"./@css-render-Wpowbghw.js";import"./css-render-Ct37b3-v.js";import"./@emotion-WldOFDRm.js";import"./vdirs-DL8EOfHr.js";import"./@juggle-C8OzoCMD.js";import"./@arco-design-CcQ42w85.js";import"./number-precision-BW_FzNZC.js";import"./lodash-DBaaQlBN.js";import"./vue-router-CTzOd6h0.js";import"./jquery-awXEzGOF.js";import"./prismjs-Cy_Hpibq.js";import"./primevue-C3o8vU3d.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";/* empty css                  *//* empty css                    */const l={},m=t("h1",null,"regexp.test()",-1),a=t("p",null,"【test()】方法用于测试给定的字符串是否符合条件，返回 【《a;;true》】 或 【《a;;false》】。",-1),d={class:"nocopy"},_=t("dl",null,[t("dt",null,"【str】"),t("dd",null,"用来与正则表达式匹配的《字符串》。")],-1),x=t("br",null,null,-1),u=t("p",null,"当需要知道一个正则表达式是否与指定的字符串《匹配》时，就可以使用 【test()】（类似于 【string.search()】 方法），差别在于 【test()】 返回一个《布尔值》，而 【search()】 返回《b;;索引（如果找到）》或者《b;; -1（如果没找到）》。",-1),h=t("p",null,"若想知道更多信息（然而执行比较慢），可使用【exec()】 方法（类似于 【string.《match()》】 方法）。和 【exec()】 (或者组合使用)一样，在相同的全局正则表达式实例上多次调用【test】将会《越过》之前的匹配。",-1),f=t("h6",null,"当设置全局标志的正则使用【test()】",-1),g=t("p",null,"如果正则表达式设置了《全局》标志，【test()】 的执行会改变正则表达式 【《lastIndex》】属性。连续的执行【test()】方法，后续的执行将会从 【《lastIndex》】 处开始匹配字符串，(【《exec()》】 同样改变正则本身的 【lastIndex】 属性值)。",-1);function v(I,b){const r=p("code");return e(),o(c,null,[m,a,s((e(),o("pre",d,[i("RegExp.test(str)")])),[[r,void 0,"js"]]),_,x,u,h,f,g,s((e(),o("pre",null,[i(`var regex = /foo/g;

// regex.lastIndex is at 《d;;0》
regex.test("foo"); // 《c;;true》

// regex.lastIndex is now at 《d;;3》
regex.test("foo"); // 《c;;false》`)])),[[r,void 0,"js"]])],64)}const $=n(l,[["render",v]]);export{$ as default};
