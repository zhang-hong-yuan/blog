import{_ as c}from"./index-C58PDwY0.js";import{ao as n,o as r,c as e,a4 as s,q as o,F as p,e as t}from"./@vue-DejhS5Sx.js";import"./element-plus-BrY0m-Us.js";import"./@vueuse-DG8PRMz9.js";import"./@element-plus-BIOyB9cn.js";import"./lodash-es-CapuB_Of.js";import"./@popperjs-Be9rlJlp.js";import"./hammerjs-uHrd7ah6.js";import"./@babel-Cpj98o6Y.js";import"./pinia-B7SS5Sce.js";import"./naive-ui-DvnQ8VCf.js";import"./seemly-BiqVPN66.js";import"./date-fns-x7VUUoCw.js";import"./evtd-CI_DDEu_.js";import"./vooks-BvrI42AR.js";import"./vueuc-DNxWDit6.js";import"./@css-render-Wpowbghw.js";import"./css-render-Ct37b3-v.js";import"./@emotion-WldOFDRm.js";import"./vdirs-DL8EOfHr.js";import"./@juggle-C8OzoCMD.js";import"./@arco-design-CcQ42w85.js";import"./number-precision-BW_FzNZC.js";import"./lodash-DBaaQlBN.js";import"./vue-router-CTzOd6h0.js";import"./jquery-awXEzGOF.js";import"./prismjs-Cy_Hpibq.js";import"./primevue-C3o8vU3d.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";/* empty css                  *//* empty css                    */const l={},m=t("h1",null,"assign()",-1),a=t("p",null,"静态方法只有构造函数 Object 可以调用。",-1),u=t("p",null,[t("code",null,"Object.assign()"),o(" 方法将所有可枚举的自有属性从一个或多个源对象复制到目标对象，返回修改后的对象。语法：")],-1),_=t("ul",null,[t("li",null,[t("code",null,"target"),o(" 目标对象，接收源对象属性的对象，也是修改后的返回值。")]),t("li",null,[t("code",null,"sources"),o(" 源对象，包含将被合并的属性。如果有相同的属性，则后面的覆盖前面的。")])],-1);function d(g,b){const i=n("code");return r(),e(p,null,[m,a,u,s((r(),e("pre",null,[o("Object.assign(target, ...sources)")])),[[i,void 0,"js"]]),_,s((r(),e("pre",null,[o(`const target = { a: 1, b: 2 }
const source = { b: 4, c: 5 }

const ret = Object.assign(target, source)

console.log(target)         // Object { a: 1, b: 4, c: 5 }
console.log(ret === target) // true`)])),[[i,void 0,"js"]])],64)}const U=c(l,[["render",d]]);export{U as default};
