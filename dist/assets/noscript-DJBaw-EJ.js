import{_ as e}from"./index-C58PDwY0.js";import{ao as m,o,c as r,a4 as s,q as i,F as n,e as t}from"./@vue-DejhS5Sx.js";import"./element-plus-BrY0m-Us.js";import"./@vueuse-DG8PRMz9.js";import"./@element-plus-BIOyB9cn.js";import"./lodash-es-CapuB_Of.js";import"./@popperjs-Be9rlJlp.js";import"./hammerjs-uHrd7ah6.js";import"./@babel-Cpj98o6Y.js";import"./pinia-B7SS5Sce.js";import"./naive-ui-DvnQ8VCf.js";import"./seemly-BiqVPN66.js";import"./date-fns-x7VUUoCw.js";import"./evtd-CI_DDEu_.js";import"./vooks-BvrI42AR.js";import"./vueuc-DNxWDit6.js";import"./@css-render-Wpowbghw.js";import"./css-render-Ct37b3-v.js";import"./@emotion-WldOFDRm.js";import"./vdirs-DL8EOfHr.js";import"./@juggle-C8OzoCMD.js";import"./@arco-design-CcQ42w85.js";import"./number-precision-BW_FzNZC.js";import"./lodash-DBaaQlBN.js";import"./vue-router-CTzOd6h0.js";import"./jquery-awXEzGOF.js";import"./prismjs-Cy_Hpibq.js";import"./primevue-C3o8vU3d.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";/* empty css                  *//* empty css                    */const c={},l=t("h1",null,"<noscript>",-1),a=t("p",null,"<noscript> 元素用来定义在脚本未被执行时的替代内容(文本)。可被用于可识别 【<noscript>】 标签但无法支持其中的脚本的浏览器。即：如果浏览器支持脚本，那么它不会显示出 <noscript> 元素中的文本。 ",-1),_=t("p",null,[t("strong",null,"注释"),i("无法识别 【<script>】 标签的浏览器会把标签的内容显示到页面上。为了避免浏览器这样做，您应当在注释标签中隐藏脚本。老式的(无法识别 【<script>】 标签的)浏览器会忽略注释，这样就不会把标签的内容写到页面上，而新式的浏览器则懂得执行这些脚本，即使它们被包围在注释标签中！")],-1);function d(u,f){const p=m("code");return o(),r(n,null,[l,a,_,s((o(),r("pre",null,[i(`<script>
    <!--
    function displayMsg() {
        alert("Hello World!")
    }
    //-->
<\/script>`)])),[[p,void 0,"html"]])],64)}const R=e(c,[["render",d]]);export{R as default};
