import{_ as n}from"./index-C58PDwY0.js";import{ao as l,o,c as r,a4 as s,q as i,F as p,e as t}from"./@vue-DejhS5Sx.js";import"./element-plus-BrY0m-Us.js";import"./@vueuse-DG8PRMz9.js";import"./@element-plus-BIOyB9cn.js";import"./lodash-es-CapuB_Of.js";import"./@popperjs-Be9rlJlp.js";import"./hammerjs-uHrd7ah6.js";import"./@babel-Cpj98o6Y.js";import"./pinia-B7SS5Sce.js";import"./naive-ui-DvnQ8VCf.js";import"./seemly-BiqVPN66.js";import"./date-fns-x7VUUoCw.js";import"./evtd-CI_DDEu_.js";import"./vooks-BvrI42AR.js";import"./vueuc-DNxWDit6.js";import"./@css-render-Wpowbghw.js";import"./css-render-Ct37b3-v.js";import"./@emotion-WldOFDRm.js";import"./vdirs-DL8EOfHr.js";import"./@juggle-C8OzoCMD.js";import"./@arco-design-CcQ42w85.js";import"./number-precision-BW_FzNZC.js";import"./lodash-DBaaQlBN.js";import"./vue-router-CTzOd6h0.js";import"./jquery-awXEzGOF.js";import"./prismjs-Cy_Hpibq.js";import"./primevue-C3o8vU3d.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";/* empty css                  *//* empty css                    */const m={},a=t("h1",null,"Number.parseInt()",-1),_=t("p",null,"【Number.parseInt()】 静态方法解析一个字符串参数并返回一个指定基数的《整数》。",-1),c={class:"nocopy"},u=t("dl",null,[t("dt",null,"【string】"),t("dd",null,"要被解析的值，会被强制转化为《字符串》。字符串开头的空白符将会被忽略。如果第一个非空白字符不能转换为数字，则返回 【《NaN》】。")],-1),d=t("br",null,null,-1),h=t("p",null,"【Number.parseInt()】和全局的 【parseInt()】 函数具有相同的功能：",-1),N=t("p",null,"其目的是《减少全局性方法》，使得语言逐步模块化。",-1),b=t("hr",null,null,-1),F=t("h1",null,"Number.parseFloat()",-1),v=t("p",null,"【Number.parseFloat()】 静态方法解析参数并返回《浮点数》。如果无法从参数中解析出一个数字，则返回 【NaN】。",-1),f={class:"nocopy"},I=t("dl",null,[t("dt",null,"【string】"),t("dd",null,"要解析的值，会被强制转换为字符串。该参数开头的空白会被忽略。如果第一个非空白字符不能被转换为数字，则返回 【《NaN》】。")],-1),g=t("br",null,null,-1),j=t("p",null,"【Number.parseFloat()】 与全局函数 【parseFloat()】 具有相同的功能：",-1),x=t("p",null,"其目的是减少全局性方法，使得语言逐步《模块化》。",-1);function B(k,y){const e=l("code");return o(),r(p,null,[a,_,s((o(),r("pre",c,[i("Number.parseInt(string)")])),[[e,void 0,"js"]]),u,d,h,s((o(),r("pre",null,[i("Number.parseInt === parseInt; // true")])),[[e,void 0,"js"]]),N,b,F,v,s((o(),r("pre",f,[i("Number.parseFloat(string)")])),[[e,void 0,"js"]]),I,g,j,s((o(),r("pre",null,[i("Number.parseFloat === parseFloat; // true")])),[[e,void 0,"js"]]),x],64)}const it=n(m,[["render",B]]);export{it as default};
