import{_ as t}from"./index-C58PDwY0.js";import{at as r}from"./@vue-DejhS5Sx.js";import"./element-plus-BrY0m-Us.js";import"./@vueuse-DG8PRMz9.js";import"./@element-plus-BIOyB9cn.js";import"./lodash-es-CapuB_Of.js";import"./@popperjs-Be9rlJlp.js";import"./hammerjs-uHrd7ah6.js";import"./@babel-Cpj98o6Y.js";import"./pinia-B7SS5Sce.js";import"./naive-ui-DvnQ8VCf.js";import"./seemly-BiqVPN66.js";import"./date-fns-x7VUUoCw.js";import"./evtd-CI_DDEu_.js";import"./vooks-BvrI42AR.js";import"./vueuc-DNxWDit6.js";import"./@css-render-Wpowbghw.js";import"./css-render-Ct37b3-v.js";import"./@emotion-WldOFDRm.js";import"./vdirs-DL8EOfHr.js";import"./@juggle-C8OzoCMD.js";import"./@arco-design-CcQ42w85.js";import"./number-precision-BW_FzNZC.js";import"./lodash-DBaaQlBN.js";import"./vue-router-CTzOd6h0.js";import"./jquery-awXEzGOF.js";import"./prismjs-Cy_Hpibq.js";import"./primevue-C3o8vU3d.js";import"./pinia-plugin-persistedstate-RV7uh3T-.js";/* empty css                  *//* empty css                    */const d={},o=r("<h1>赋值运算符 Assignment operators</h1><p>一个 赋值运算符(assignment operator)将它右边操作数的值赋给它左边的操作数。最简单的赋值运算符是等于(【=】)，它将右边的操作数值赋给左边的操作数。那么 【x = y】 就是将 y 的值赋给 x。</p><p>还有一些复合赋值操作符，它们是下表列出的这些操作的缩写：</p><figure><table><thead><tr><th>名字</th><th>简写的操作符</th><th>含义</th></tr></thead><tbody><tr><td>赋值</td><td>【x = y】</td><td>【x = y】</td></tr><tr><td>加法赋值</td><td>【x += y】</td><td>【x = x + y】</td></tr><tr><td>减法赋值</td><td>【x -= y】</td><td>【x = x - y】</td></tr><tr><td>乘法赋值</td><td>【x *= y】</td><td>【x = x * y】</td></tr><tr><td>除法赋值</td><td>【x /= y】</td><td>【x = x / y】</td></tr><tr><td>求余赋值</td><td>【x %= y】</td><td>【x = x % y】</td></tr><tr><td>求幂赋值</td><td>【x **= y】</td><td>【x = x ** y】</td></tr></tbody></table></figure>",4);function i(p,m){return o}const I=t(d,[["render",i]]);export{I as default};
